{"version":3,"sources":["Joker.jpg","finger.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","cardsRemainingText","textAlign","breakpoints","down","fontSize","title","flexGrow","cardSize","margin","width","card","paddingTop","marginLeft","marginRight","paddingLeft","paddingRight","paddingBottom","marginTop","rulesCard","marginBottom","button","height","geneFinger","listItemText","fontWeight","table","minWidth","StyledTableCell","withStyles","head","backgroundColor","palette","common","black","color","white","body","TableCell","StyledTableRow","root","TableRow","App","classes","useState","geneDialogFlag","setGeneDialogFlag","deckId","setCard","cardsRemaining","setCardsRemaining","className","style","Dialog","open","onClose","DialogContent","Typography","variant","src","Finger","placeholder","Joker","AppBar","position","Toolbar","Button","onClick","setTimeout","Grid","container","direction","justify","alignItems","Card","raised","image","alt","id","item","xs","sm","md","lg","size","Axios","get","then","resp","console","log","catch","error","fullWidth","success","data","cards","remaining","disabled","TableContainer","Table","aria-label","TableHead","align","TableBody","rule","map","row","key","component","scope","Boolean","window","location","hostname","match","createMuiTheme","primary","main","dark","contrastText","secondary","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.57be4a01.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Joker.b30f3d45.jpg\";","module.exports = __webpack_public_path__ + \"static/media/finger.54520459.png\";","import React,{useState} from 'react';\nimport './App.css';\nimport {Button,Card,Grid,AppBar,Toolbar,Typography} from '@material-ui/core';\nimport Axios from 'axios';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Finger from './finger.png'\nimport Joker from './Joker.jpg'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nconst useStyles = makeStyles((theme) => ({\n    cardsRemainingText: {\n      textAlign:'center',\n      [theme.breakpoints.down(\"sm\")]: {\n        fontSize: 30\n      }\n  },\n  title: {\n    flexGrow: 4,\n    textAlign:'left'\n  },\n  cardSize:{\n    margin:'auto',\n    width:'300px',\n    [theme.breakpoints.down('sm')]: {\n      width:'150px'\n    }\n  },\n  card:{\n    paddingTop:20,\n    marginLeft:'3%',\n    marginRight:'3%',\n    paddingLeft:'5%',\n    paddingRight:'5%',\n    paddingBottom:40,\n    marginTop:25,\n    [theme.breakpoints.down('sm')]: {\n      marginLeft:'4%',\n      marginRight:'4%',\n    }\n  },\n  rulesCard:{\n    paddingLeft:23,\n    paddingRight:23,\n    paddingTop:2,\n    marginLeft:'3%',\n    marginRight:'3%',\n   \n    marginTop:10,\n    marginBottom:10,\n    [theme.breakpoints.down('sm')]: {\n      marginLeft:'4%',\n      marginRight:'4%',\n    }\n  },\n  button:{\n    height:80,\n    fontSize:'15pt',\n    [theme.breakpoints.down('sm')]:{\n      height:50,\n      fontSize:'12pt'\n    }\n  },\n  geneFinger:{\n    marginTop:20,\n    [theme.breakpoints.down('sm')]:{\n      width:'120px'\n    }\n  },\n  listItemText:{\n    fontSize:20,\n    fontWeight:600\n  },\n  table: {\n    minWidth: 500,\n  },\n}))\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 15,\n    fontWeight:600\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: '#afafaf',\n    },\n  },\n}))(TableRow);\n\nconst App = () => {\n\n  const classes = useStyles();\n  \n  const [geneDialogFlag,setGeneDialogFlag] = useState(false)\n  const [deckId,setDeckId] = useState(\"cqif69lwm9tz\")\n  const [card,setCard] = useState({});\n  const [cardsRemaining,setCardsRemaining] = useState(0)\n\n  const rules = [\n    { card:\"King\" , title:\"pending\", rule:\"pending\" }, \n    { card:\"Queen\" , title:\"Question Master\", rule:\"Ask questions, those who answer drink.\" }, \n    { card:\"Jack\" , title:\"Never Have I Ever\", rule:\"Loser of this one drinks.\" }, \n    { card:\"Ten\" , title:\"Categories\", rule:\"Pick a category, others must continue.\" }, \n    { card:\"Nine\" , title:\"Bust a Rhyme\", rule:\"Pick a word, others must rhyme.\" }, \n    { card:\"Eight\" , title:\"Mate\", rule:\"Find a drinking buddy.\" }, \n    { card:\"Seven\" , title:\"Heaven\", rule:\"Reach for the sky.\" }, \n    { card:\"Six\" , title:\"New Rule\", rule:\"Create a rule.\" }, \n    { card:\"Five\" , title:\"All\", rule:\"Everyone drinks.\" }, \n    { card:\"Four\" , title:\"Floor\", rule:\"Last person to touch the floor drinks.\" }, \n    { card:\"Three\" , title:\"Me\", rule:\"Take 2 drinks.\" }, \n    { card:\"Two\" , title:\"You\", rule:\"Pick someone to take 2 drinks.\" }, \n    { card:\"Ace\" , title:\"Waterfall\", rule:\"Everyone drinks, starting with you.\" },\n  ]\n\n  const handleGetCard = () => {\n    Axios.get(\"https://deckofcardsapi.com/api/deck/\"+deckId+\"/draw/?count=1\")\n    .then(resp => {\n      if(!resp.success){\n        \n        setCard(resp.data.cards[0])\n        console.log(resp)\n        setCardsRemaining(resp.data.remaining)\n      }\n    })\n    .catch((error)=>console.log(error))\n  }\n  const handleShuffle = () => {\n    Axios.get(\"https://deckofcardsapi.com/api/deck/\"+deckId+\"/shuffle/\")\n    .then(resp => {\n      console.log(resp);\n      setCardsRemaining(52)\n      setCard({})\n    })\n    .catch((error)=>console.log(error))\n\n  }\n\n  const handleGeneDialog = () => {\n    setGeneDialogFlag(true);\n    setTimeout(() => {\n      setGeneDialogFlag(false)\n    },3000)\n  }\n\n  const handleCloseGeneDialog = () => {\n    // setGeneDialogFlag(false)\n  }\n\n\n\n  return (\n    <div className=\"App\" style={{backgroundColor:'#D64045',height:\"100%\",width:'100%'}}>\n      <Dialog\n        open={geneDialogFlag}\n        onClose={handleCloseGeneDialog}>\n        <DialogContent>\n          <Typography variant=\"h3\" className={classes.cardsRemainingText}>Just For You Gene</Typography>\n          <img src={Finger} className={classes.geneFinger}  placeholder={Joker}></img>\n          <img src={Finger} className={classes.geneFinger} placeholder={Joker}></img>\n\n        </DialogContent>\n\n      </Dialog>\n      <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h5\" className={classes.title}>\n          Dawg's Cup\n        </Typography>\n        <Button color=\"inherit\" onClick={handleGeneDialog}>Click Me</Button>\n      </Toolbar>\n      </AppBar>\n\n      <Grid container   \n        direction=\"row\"\n        justify=\"space-around\"\n        alignItems=\"center\">\n\n        <Card raised={true} className={classes.card}>\n          <Typography variant=\"h3\" className={classes.cardsRemainingText}>Cards Remaining : {cardsRemaining}</Typography>\n          <Grid container style={{marginTop:20,marginBottom:20}}>\n            <img src={card.image ? card.image : Joker} alt=\"Card\" className={classes.cardSize} id=\"imageId\"></img>\n          </Grid>\n          <Grid container style={{paddingLeft:20,paddingRight:20}}>\n            <Grid item xs={12} sm={12} md={6} lg={6}>\n              <Button color=\"primary\" variant=\"contained\" size=\"large\" className={classes.button}  onClick={handleShuffle} fullWidth>Shuffle Deck</Button>\n            </Grid>\n            <Grid item xs={12} sm={12} md={6} lg={6}>\n              <Button color=\"primary\" variant=\"outlined\" size=\"large\" className={classes.button}  onClick={handleGetCard} disabled={cardsRemaining===0} fullWidth>Next Card</Button>\n            </Grid>\n          </Grid>      \n        </Card>\n\n        <Card className={classes.rulesCard} raised={true} >\n          <Typography variant=\"h3\" className={classes.cardsRemainingText}>Game Rules</Typography>\n\n          <TableContainer >\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <StyledTableRow>\n                <StyledTableCell align=\"center\">Card</StyledTableCell>\n                <StyledTableCell align=\"center\">Title</StyledTableCell>\n                <StyledTableCell align=\"center\">Rule</StyledTableCell>\n      \n              </StyledTableRow>\n            </TableHead>\n            <TableBody>\n              {rules.map((row) => (\n                <StyledTableRow key={row.card}>\n                  <StyledTableCell component=\"th\" scope=\"row\">\n                    {row.card}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.title}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.rule}</StyledTableCell>\n\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n \n          </Card>\n\n      \n\n      </Grid>      \n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#094074',\n      dark: '#709D47',\n      contrastText: '#ffffff'\n    },\n    secondary: {\n      main: '#efefef',\n      dark: '#cfcfcf  ',\n      contrastText: '#000000'\n    }\n  },\n})\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </MuiThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}